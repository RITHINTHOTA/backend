pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm') 
    }
    stages {
        stage ('read the version'){
            steps {
                def packageJson = readJSON file: 'package.json'
                def appVersion = packageJson.version
            }
        }
        stage('Install dependencies'){
            steps {
                sh """
                 npm install
                 ls -ltr
                 echo $appVersion
                """
            }
        }
    }   
    post{
        always {
        deleteDir()
        }
        success{
             echo "It will run when the pipeline is success"
        }
        failure {
             echo "It will run when the pipeline is failure" 
        }
    }
}      